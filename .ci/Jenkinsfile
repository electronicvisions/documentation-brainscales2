@Library("jenlib") _

try {

	boolean deploy = env.GERRIT_EVENT_TYPE == "change-merged"

	Map<String, Object> pipelineOptions = [
		projects           : ["documentation-brainscales2"],
		container          : [app: "dls"],
		moduleOptions      : [modules: ["ppu-toolchain"]],
		notificationChannel: "#jenkins-trashbin",  // success is checked globally
		ignoreGerritChanges: deploy
	]

	withCcache() {
		wafDefaultPipeline(pipelineOptions)
	}

	stage("Archive Results") {
		runOnSlave(label: "frontend") {
			// NFS flush, but filelist might come handy anyways
			jesh("find doc/ -exec ls -lisa {} \\; > filelist_doc.txt")

			archiveArtifacts("filelist_doc.txt, doc/sphinx_documentation_brainscales2/**/*")
			publishHTML([allowMissing: false,
			             keepAll     : true,
			             reportDir   : "doc/sphinx_documentation_brainscales2",
			             reportFiles : "index.html",
			             reportName  : "BrainScaleS-2 User Documentation"])
		}
	}

	conditionalStage(name: "Deployment to GitHub Pages", skip: !deploy) {
		runOnSlave(label: "frontend") {
			dir("build/documentation-brainscales2/html") {
				jesh("touch .nojekyll")
				jesh("git init")
				jesh("git add .")
				jesh("git commit -m \"build ${currentBuild.projectName} ${currentBuild.displayName}\"")
				jesh("git remote add github git@github-documentation-brainscales2_gh-pages:electronicvisions/documentation-brainscales2.git")
				lock("documentation-brainscales2_GITHUB-UPLOAD") {
					jesh("git push --set-upstream -f github master:gh-pages")
				}
			}
		}
	}

} catch (Throwable t) {
	notifyFailure(mattermostChannel: "#dls-software")
	throw t
}

if (currentBuild.currentResult != "SUCCESS") {
	notifyFailure(mattermostChannel: "#dls-software")
}
